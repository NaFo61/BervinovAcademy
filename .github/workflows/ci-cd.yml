name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  code-quality:
    name: Проверка качества кода
    runs-on: ubuntu-latest

    steps:
      - name: Получить код
        uses: actions/checkout@v3

      - name: Установить Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Установить зависимости
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pre-commit

      - name: Запустить pre-commit проверки
        run: pre-commit run --all-files

  tests:
    name: Запуск тестов
    runs-on: ubuntu-latest
    needs: code-quality  # Запускается только если code-quality прошёл

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Получить код
        uses: actions/checkout@v3

      - name: Установить Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Установить зависимости
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-django pytest-cov

      - name: Запустить миграции
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
          SECRET_KEY: test-key-for-ci
        run: |
          python manage.py migrate

      - name: Запустить тесты
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
          SECRET_KEY: test-key-for-ci
          DEBUG: False
        run: |
          pytest --cov=backend --cov-report=xml -v

      - name: Загрузить отчёт покрытия
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  security:
    name: Проверка безопасности
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Только для main ветки

    steps:
      - name: Получить код
        uses: actions/checkout@v3

      - name: Установить Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Сканирование уязвимостей в зависимостях
        run: |
          pip install safety
          safety check --full-report

      - name: Сканирование кода на уязвимости
        run: |
          pip install bandit
          bandit -r backend/ -f html -o security-report.html || true
